{"id":"node_modules/collections/iterator.js","dependencies":[{"name":"/home/heshds/Academics/semester5/PROJECT/e16-3yp-obstacle-bots-for-swarm-robots/3D_Interface/package.json","includedInParent":true,"mtime":1605341821038},{"name":"/home/heshds/Academics/semester5/PROJECT/e16-3yp-obstacle-bots-for-swarm-robots/3D_Interface/node_modules/collections/package.json","includedInParent":true,"mtime":1605341820498},{"name":"./shim-object","loc":{"line":5,"column":21},"parent":"/home/heshds/Academics/semester5/PROJECT/e16-3yp-obstacle-bots-for-swarm-robots/3D_Interface/node_modules/collections/iterator.js","resolved":"/home/heshds/Academics/semester5/PROJECT/e16-3yp-obstacle-bots-for-swarm-robots/3D_Interface/node_modules/collections/shim-object.js"},{"name":"./generic-collection","loc":{"line":6,"column":32},"parent":"/home/heshds/Academics/semester5/PROJECT/e16-3yp-obstacle-bots-for-swarm-robots/3D_Interface/node_modules/collections/iterator.js","resolved":"/home/heshds/Academics/semester5/PROJECT/e16-3yp-obstacle-bots-for-swarm-robots/3D_Interface/node_modules/collections/generic-collection.js"}],"generated":{"js":"\"use strict\";\n\nmodule.exports = Iterator;\n\nvar Object = require(\"./shim-object\");\nvar GenericCollection = require(\"./generic-collection\");\n\n// upgrades an iterable to a Iterator\nfunction Iterator(iterable, standardMode) {\n\n    /*\n        standardMode should be passed as true by a collection that uses Iterator\n        to provide a polyfill of standard iterations methods like entries() and values(),\n        as Collection's iterator behaves differently than standards ones when it comes to sparse arrays.\n        without passing standardMode, new Iterator instances will behave as intended independently of standards.\n    */\n    var values = standardMode && iterable && iterable.values && iterable.values();\n    if(values && typeof values.next === \"function\" ) {\n        return values;\n    }\n\n    if (!(this instanceof Iterator)) {\n        return new Iterator(iterable);\n    }\n\n    if (Array.isArray(iterable) || typeof iterable === \"string\")\n        return Iterator.iterate(iterable);\n\n    iterable = Object(iterable);\n\n    if (iterable instanceof Iterator) {\n        return iterable;\n    } else if (iterable.next) {\n        this.next = function () {\n            return iterable.next();\n        };\n    } else if (iterable.iterate) {\n        var iterator = iterable.iterate();\n        this.next = function () {\n            return iterator.next();\n        };\n    } else if (Object.prototype.toString.call(iterable) === \"[object Function]\") {\n        this.next = iterable;\n    } else {\n        throw new TypeError(\"Can't iterate \" + iterable);\n    }\n\n}\n\nIterator.prototype.forEach = GenericCollection.prototype.forEach;\nIterator.prototype.map = GenericCollection.prototype.map;\nIterator.prototype.filter = GenericCollection.prototype.filter;\nIterator.prototype.every = GenericCollection.prototype.every;\nIterator.prototype.some = GenericCollection.prototype.some;\nIterator.prototype.any = GenericCollection.prototype.any;\nIterator.prototype.all = GenericCollection.prototype.all;\nIterator.prototype.min = GenericCollection.prototype.min;\nIterator.prototype.max = GenericCollection.prototype.max;\nIterator.prototype.sum = GenericCollection.prototype.sum;\nIterator.prototype.average = GenericCollection.prototype.average;\nIterator.prototype.flatten = GenericCollection.prototype.flatten;\nIterator.prototype.zip = GenericCollection.prototype.zip;\nIterator.prototype.enumerate = GenericCollection.prototype.enumerate;\nIterator.prototype.sorted = GenericCollection.prototype.sorted;\nIterator.prototype.group = GenericCollection.prototype.group;\nIterator.prototype.reversed = GenericCollection.prototype.reversed;\nIterator.prototype.toArray = GenericCollection.prototype.toArray;\nIterator.prototype.toObject = GenericCollection.prototype.toObject;\nIterator.prototype.iterator = GenericCollection.prototype.iterator;\n\nIterator.prototype.__iterationObject = null;\nObject.defineProperty(Iterator.prototype,\"_iterationObject\", {\n    get: function() {\n        return this.__iterationObject || (this.__iterationObject = { done: false, value:void 0});\n    }\n});\n\n\n// this is a bit of a cheat so flatten and such work with the generic\n// reducible\nIterator.prototype.constructClone = function (values) {\n    var clone = [];\n    clone.addEach(values);\n    return clone;\n};\n\nIterator.prototype.mapIterator = function (callback /*, thisp*/) {\n    var self = Iterator(this),\n        thisp = arguments[1],\n        i = 0;\n\n    if (Object.prototype.toString.call(callback) != \"[object Function]\")\n        throw new TypeError();\n\n    return new self.constructor(function () {\n        if(self._iterationObject.done !== true) {\n            var callbackValue = callback.call(thisp, self.next().value, i++, self);\n            self._iterationObject.value = callbackValue;\n        }\n        return self._iterationObject;\n    });\n};\n\nIterator.prototype.filterIterator = function (callback /*, thisp*/) {\n    var self = Iterator(this),\n        thisp = arguments[1],\n        i = 0;\n\n    if (Object.prototype.toString.call(callback) != \"[object Function]\")\n        throw new TypeError();\n\n    return new self.constructor(function () {\n        var nextEntry;\n        while (true) {\n            nextEntry = self.next();\n            if(nextEntry.done !== true) {\n                if (callback.call(thisp, nextEntry.value, i++, self))\n                    return nextEntry;\n            }\n            else {\n                //done true and value undefined at this point\n                return nextEntry;\n            }\n        }\n    });\n};\n\nIterator.prototype.reduce = function (callback /*, initial, thisp*/) {\n    var self = Iterator(this),\n        result = arguments[1],\n        thisp = arguments[2],\n        i = 0,\n        nextEntry;\n\n    if (Object.prototype.toString.call(callback) != \"[object Function]\")\n        throw new TypeError();\n\n    // first iteration unrolled\n    nextEntry = self.next();\n    if(nextEntry.done === true) {\n        if (arguments.length > 1) {\n            return arguments[1]; // initial\n        } else {\n            throw TypeError(\"cannot reduce a value from an empty iterator with no initial value\");\n        }\n    }\n    if (arguments.length > 1) {\n        result = callback.call(thisp, result, nextEntry.value, i, self);\n    } else {\n        result = nextEntry.value;\n    }\n    i++;\n    // remaining entries\n    while (true) {\n        nextEntry = self.next();\n        if(nextEntry.done === true) {\n            return result;\n        }\n        result = callback.call(thisp, result, nextEntry.value, i, self);\n        i++;\n    }\n\n};\n\nIterator.prototype.concat = function () {\n    return Iterator.concat(\n        Array.prototype.concat.apply(this, arguments)\n    );\n};\n\nIterator.prototype.dropWhile = function (callback /*, thisp */) {\n    var self = Iterator(this),\n        thisp = arguments[1],\n        stopped = false,\n        stopValue,\n        nextEntry,\n        i = 0;\n\n    if (Object.prototype.toString.call(callback) != \"[object Function]\")\n        throw new TypeError();\n\n    while (true) {\n        nextEntry = self.next();\n        if(nextEntry.done === true) {\n            break;\n        }\n        if (!callback.call(thisp, nextEntry.value, i, self)) {\n            stopped = true;\n            stopValue = nextEntry.value;\n            break;\n        }\n        i++;\n    }\n\n    if (stopped) {\n        return self.constructor([stopValue]).concat(self);\n    } else {\n        return self.constructor([]);\n    }\n};\n\nIterator.prototype.takeWhile = function (callback /*, thisp*/) {\n    var self = Iterator(this),\n        thisp = arguments[1],\n        nextEntry,\n        i = 0;\n\n    if (Object.prototype.toString.call(callback) != \"[object Function]\")\n        throw new TypeError();\n\n    return new self.constructor(function () {\n        if(self._iterationObject.done !== true) {\n            var value = self.next().value;\n            if(callback.call(thisp, value, i++, self)) {\n                self._iterationObject.value = value;\n            }\n            else {\n                self._iterationObject.done = true;\n                self._iterationObject.value = void 0;\n            }\n        }\n        return self._iterationObject;\n    });\n\n};\n\nIterator.prototype.zipIterator = function () {\n    return Iterator.unzip(\n        Array.prototype.concat.apply(this, arguments)\n    );\n};\n\nIterator.prototype.enumerateIterator = function (start) {\n    return Iterator.count(start).zipIterator(this);\n};\n\n// creates an iterator for Array and String\nIterator.iterate = function (iterable) {\n    var start;\n    start = 0;\n    return new Iterator(function () {\n        // advance to next owned entry\n        if (typeof iterable === \"object\") {\n            while (!(start in iterable)) {\n                // deliberately late bound\n                if (start >= iterable.length) {\n                    this._iterationObject.done = true;\n                    this._iterationObject.value = void 0;\n                    break;\n                }\n                else start += 1;\n            }\n        } else if (start >= iterable.length) {\n            this._iterationObject.done = true;\n            this._iterationObject.value = void 0;\n        }\n\n        if(!this._iterationObject.done) {\n            this._iterationObject.value = iterable[start];\n            start += 1;\n        }\n        return this._iterationObject;\n    });\n};\n\nIterator.cycle = function (cycle, times) {\n    var next;\n    if (arguments.length < 2)\n        times = Infinity;\n    //cycle = Iterator(cycle).toArray();\n    return new Iterator(function () {\n        var iteration, nextEntry;\n\n        if(next) {\n            nextEntry = next();\n        }\n\n        if(!next || nextEntry.done === true) {\n            if (times > 0) {\n                times--;\n                iteration = Iterator.iterate(cycle);\n                nextEntry = (next = iteration.next.bind(iteration))();\n            }\n            else {\n                this._iterationObject.done = true;\n                nextEntry = this._iterationObject;            }\n        }\n        return nextEntry;\n    });\n};\n\nIterator.concat = function (iterators) {\n    iterators = Iterator(iterators);\n    var next;\n    return new Iterator(function (){\n        var iteration, nextEntry;\n        if(next) nextEntry = next();\n        if(!nextEntry || nextEntry.done === true) {\n            nextEntry = iterators.next();\n            if(nextEntry.done === false) {\n                iteration = Iterator(nextEntry.value);\n                next = iteration.next.bind(iteration);\n                return next();\n            }\n            else {\n                return nextEntry;\n            }\n        }\n        else return nextEntry;\n    });\n};\n\nIterator.unzip = function (iterators) {\n    iterators = Iterator(iterators).map(Iterator);\n    if (iterators.length === 0)\n        return new Iterator([]);\n    return new Iterator(function () {\n        var stopped, nextEntry;\n        var result = iterators.map(function (iterator) {\n            nextEntry = iterator.next();\n            if (nextEntry.done === true ) {\n                stopped = true;\n            }\n            return nextEntry.value;\n        });\n        if (stopped) {\n            this._iterationObject.done = true;\n            this._iterationObject.value = void 0;\n        }\n        else {\n            this._iterationObject.value = result;\n        }\n        return this._iterationObject;\n    });\n};\n\nIterator.zip = function () {\n    return Iterator.unzip(\n        Array.prototype.slice.call(arguments)\n    );\n};\n\nIterator.chain = function () {\n    return Iterator.concat(\n        Array.prototype.slice.call(arguments)\n    );\n};\n\nIterator.range = function (start, stop, step) {\n    if (arguments.length < 3) {\n        step = 1;\n    }\n    if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n    }\n    start = start || 0;\n    step = step || 1;\n    return new Iterator(function () {\n        if (start >= stop) {\n            this._iterationObject.done = true;\n            this._iterationObject.value = void 0;\n        }\n        var result = start;\n        start += step;\n        this._iterationObject.value = result;\n\n        return this._iterationObject;\n    });\n};\n\nIterator.count = function (start, step) {\n    return Iterator.range(start, Infinity, step);\n};\n\nIterator.repeat = function (value, times) {\n    return new Iterator.range(times).mapIterator(function () {\n        return value;\n    });\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/collections/iterator.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/collections/iterator.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}}],"sources":{"node_modules/collections/iterator.js":"\"use strict\";\n\nmodule.exports = Iterator;\n\nvar Object = require(\"./shim-object\");\nvar GenericCollection = require(\"./generic-collection\");\n\n// upgrades an iterable to a Iterator\nfunction Iterator(iterable, standardMode) {\n\n    /*\n        standardMode should be passed as true by a collection that uses Iterator\n        to provide a polyfill of standard iterations methods like entries() and values(),\n        as Collection's iterator behaves differently than standards ones when it comes to sparse arrays.\n        without passing standardMode, new Iterator instances will behave as intended independently of standards.\n    */\n    var values = standardMode && iterable && iterable.values && iterable.values();\n    if(values && typeof values.next === \"function\" ) {\n        return values;\n    }\n\n    if (!(this instanceof Iterator)) {\n        return new Iterator(iterable);\n    }\n\n    if (Array.isArray(iterable) || typeof iterable === \"string\")\n        return Iterator.iterate(iterable);\n\n    iterable = Object(iterable);\n\n    if (iterable instanceof Iterator) {\n        return iterable;\n    } else if (iterable.next) {\n        this.next = function () {\n            return iterable.next();\n        };\n    } else if (iterable.iterate) {\n        var iterator = iterable.iterate();\n        this.next = function () {\n            return iterator.next();\n        };\n    } else if (Object.prototype.toString.call(iterable) === \"[object Function]\") {\n        this.next = iterable;\n    } else {\n        throw new TypeError(\"Can't iterate \" + iterable);\n    }\n\n}\n\nIterator.prototype.forEach = GenericCollection.prototype.forEach;\nIterator.prototype.map = GenericCollection.prototype.map;\nIterator.prototype.filter = GenericCollection.prototype.filter;\nIterator.prototype.every = GenericCollection.prototype.every;\nIterator.prototype.some = GenericCollection.prototype.some;\nIterator.prototype.any = GenericCollection.prototype.any;\nIterator.prototype.all = GenericCollection.prototype.all;\nIterator.prototype.min = GenericCollection.prototype.min;\nIterator.prototype.max = GenericCollection.prototype.max;\nIterator.prototype.sum = GenericCollection.prototype.sum;\nIterator.prototype.average = GenericCollection.prototype.average;\nIterator.prototype.flatten = GenericCollection.prototype.flatten;\nIterator.prototype.zip = GenericCollection.prototype.zip;\nIterator.prototype.enumerate = GenericCollection.prototype.enumerate;\nIterator.prototype.sorted = GenericCollection.prototype.sorted;\nIterator.prototype.group = GenericCollection.prototype.group;\nIterator.prototype.reversed = GenericCollection.prototype.reversed;\nIterator.prototype.toArray = GenericCollection.prototype.toArray;\nIterator.prototype.toObject = GenericCollection.prototype.toObject;\nIterator.prototype.iterator = GenericCollection.prototype.iterator;\n\nIterator.prototype.__iterationObject = null;\nObject.defineProperty(Iterator.prototype,\"_iterationObject\", {\n    get: function() {\n        return this.__iterationObject || (this.__iterationObject = { done: false, value:void 0});\n    }\n});\n\n\n// this is a bit of a cheat so flatten and such work with the generic\n// reducible\nIterator.prototype.constructClone = function (values) {\n    var clone = [];\n    clone.addEach(values);\n    return clone;\n};\n\nIterator.prototype.mapIterator = function (callback /*, thisp*/) {\n    var self = Iterator(this),\n        thisp = arguments[1],\n        i = 0;\n\n    if (Object.prototype.toString.call(callback) != \"[object Function]\")\n        throw new TypeError();\n\n    return new self.constructor(function () {\n        if(self._iterationObject.done !== true) {\n            var callbackValue = callback.call(thisp, self.next().value, i++, self);\n            self._iterationObject.value = callbackValue;\n        }\n        return self._iterationObject;\n    });\n};\n\nIterator.prototype.filterIterator = function (callback /*, thisp*/) {\n    var self = Iterator(this),\n        thisp = arguments[1],\n        i = 0;\n\n    if (Object.prototype.toString.call(callback) != \"[object Function]\")\n        throw new TypeError();\n\n    return new self.constructor(function () {\n        var nextEntry;\n        while (true) {\n            nextEntry = self.next();\n            if(nextEntry.done !== true) {\n                if (callback.call(thisp, nextEntry.value, i++, self))\n                    return nextEntry;\n            }\n            else {\n                //done true and value undefined at this point\n                return nextEntry;\n            }\n        }\n    });\n};\n\nIterator.prototype.reduce = function (callback /*, initial, thisp*/) {\n    var self = Iterator(this),\n        result = arguments[1],\n        thisp = arguments[2],\n        i = 0,\n        nextEntry;\n\n    if (Object.prototype.toString.call(callback) != \"[object Function]\")\n        throw new TypeError();\n\n    // first iteration unrolled\n    nextEntry = self.next();\n    if(nextEntry.done === true) {\n        if (arguments.length > 1) {\n            return arguments[1]; // initial\n        } else {\n            throw TypeError(\"cannot reduce a value from an empty iterator with no initial value\");\n        }\n    }\n    if (arguments.length > 1) {\n        result = callback.call(thisp, result, nextEntry.value, i, self);\n    } else {\n        result = nextEntry.value;\n    }\n    i++;\n    // remaining entries\n    while (true) {\n        nextEntry = self.next();\n        if(nextEntry.done === true) {\n            return result;\n        }\n        result = callback.call(thisp, result, nextEntry.value, i, self);\n        i++;\n    }\n\n};\n\nIterator.prototype.concat = function () {\n    return Iterator.concat(\n        Array.prototype.concat.apply(this, arguments)\n    );\n};\n\nIterator.prototype.dropWhile = function (callback /*, thisp */) {\n    var self = Iterator(this),\n        thisp = arguments[1],\n        stopped = false,\n        stopValue,\n        nextEntry,\n        i = 0;\n\n    if (Object.prototype.toString.call(callback) != \"[object Function]\")\n        throw new TypeError();\n\n    while (true) {\n        nextEntry = self.next();\n        if(nextEntry.done === true) {\n            break;\n        }\n        if (!callback.call(thisp, nextEntry.value, i, self)) {\n            stopped = true;\n            stopValue = nextEntry.value;\n            break;\n        }\n        i++;\n    }\n\n    if (stopped) {\n        return self.constructor([stopValue]).concat(self);\n    } else {\n        return self.constructor([]);\n    }\n};\n\nIterator.prototype.takeWhile = function (callback /*, thisp*/) {\n    var self = Iterator(this),\n        thisp = arguments[1],\n        nextEntry,\n        i = 0;\n\n    if (Object.prototype.toString.call(callback) != \"[object Function]\")\n        throw new TypeError();\n\n    return new self.constructor(function () {\n        if(self._iterationObject.done !== true) {\n            var value = self.next().value;\n            if(callback.call(thisp, value, i++, self)) {\n                self._iterationObject.value = value;\n            }\n            else {\n                self._iterationObject.done = true;\n                self._iterationObject.value = void 0;\n            }\n        }\n        return self._iterationObject;\n    });\n\n};\n\nIterator.prototype.zipIterator = function () {\n    return Iterator.unzip(\n        Array.prototype.concat.apply(this, arguments)\n    );\n};\n\nIterator.prototype.enumerateIterator = function (start) {\n    return Iterator.count(start).zipIterator(this);\n};\n\n// creates an iterator for Array and String\nIterator.iterate = function (iterable) {\n    var start;\n    start = 0;\n    return new Iterator(function () {\n        // advance to next owned entry\n        if (typeof iterable === \"object\") {\n            while (!(start in iterable)) {\n                // deliberately late bound\n                if (start >= iterable.length) {\n                    this._iterationObject.done = true;\n                    this._iterationObject.value = void 0;\n                    break;\n                }\n                else start += 1;\n            }\n        } else if (start >= iterable.length) {\n            this._iterationObject.done = true;\n            this._iterationObject.value = void 0;\n        }\n\n        if(!this._iterationObject.done) {\n            this._iterationObject.value = iterable[start];\n            start += 1;\n        }\n        return this._iterationObject;\n    });\n};\n\nIterator.cycle = function (cycle, times) {\n    var next;\n    if (arguments.length < 2)\n        times = Infinity;\n    //cycle = Iterator(cycle).toArray();\n    return new Iterator(function () {\n        var iteration, nextEntry;\n\n        if(next) {\n            nextEntry = next();\n        }\n\n        if(!next || nextEntry.done === true) {\n            if (times > 0) {\n                times--;\n                iteration = Iterator.iterate(cycle);\n                nextEntry = (next = iteration.next.bind(iteration))();\n            }\n            else {\n                this._iterationObject.done = true;\n                nextEntry = this._iterationObject;            }\n        }\n        return nextEntry;\n    });\n};\n\nIterator.concat = function (iterators) {\n    iterators = Iterator(iterators);\n    var next;\n    return new Iterator(function (){\n        var iteration, nextEntry;\n        if(next) nextEntry = next();\n        if(!nextEntry || nextEntry.done === true) {\n            nextEntry = iterators.next();\n            if(nextEntry.done === false) {\n                iteration = Iterator(nextEntry.value);\n                next = iteration.next.bind(iteration);\n                return next();\n            }\n            else {\n                return nextEntry;\n            }\n        }\n        else return nextEntry;\n    });\n};\n\nIterator.unzip = function (iterators) {\n    iterators = Iterator(iterators).map(Iterator);\n    if (iterators.length === 0)\n        return new Iterator([]);\n    return new Iterator(function () {\n        var stopped, nextEntry;\n        var result = iterators.map(function (iterator) {\n            nextEntry = iterator.next();\n            if (nextEntry.done === true ) {\n                stopped = true;\n            }\n            return nextEntry.value;\n        });\n        if (stopped) {\n            this._iterationObject.done = true;\n            this._iterationObject.value = void 0;\n        }\n        else {\n            this._iterationObject.value = result;\n        }\n        return this._iterationObject;\n    });\n};\n\nIterator.zip = function () {\n    return Iterator.unzip(\n        Array.prototype.slice.call(arguments)\n    );\n};\n\nIterator.chain = function () {\n    return Iterator.concat(\n        Array.prototype.slice.call(arguments)\n    );\n};\n\nIterator.range = function (start, stop, step) {\n    if (arguments.length < 3) {\n        step = 1;\n    }\n    if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n    }\n    start = start || 0;\n    step = step || 1;\n    return new Iterator(function () {\n        if (start >= stop) {\n            this._iterationObject.done = true;\n            this._iterationObject.value = void 0;\n        }\n        var result = start;\n        start += step;\n        this._iterationObject.value = result;\n\n        return this._iterationObject;\n    });\n};\n\nIterator.count = function (start, step) {\n    return Iterator.range(start, Infinity, step);\n};\n\nIterator.repeat = function (value, times) {\n    return new Iterator.range(times).mapIterator(function () {\n        return value;\n    });\n};\n"},"lineCount":381}},"error":null,"hash":"3ef6019e9ab86d711e55f8f40d590055","cacheData":{"env":{}}}